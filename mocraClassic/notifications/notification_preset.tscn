[gd_scene load_steps=6 format=2]

[ext_resource path="res://mocraClassic/notifications/background.png" type="Texture2D" id=1]
[ext_resource path="res://mocraClassic/notifications/notification_preset.gd" type="Script" id=2]

[sub_resource type="Animation" id=1]
resource_name = "default"
tracks/0/type = "bezier"
tracks/0/path = NodePath(".:position:x")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/keys = {
"points": PackedFloat32Array( 0, -0.25, 0, 0.25, 0 ),
"times": PackedFloat32Array( 0 )
}
tracks/1/type = "bezier"
tracks/1/path = NodePath(".:position:y")
tracks/1/interp = 1
tracks/1/loop_wrap = true
tracks/1/imported = false
tracks/1/enabled = true
tracks/1/keys = {
"points": PackedFloat32Array( 0, -0.25, 0, 0.25, 0 ),
"times": PackedFloat32Array( 0 )
}
tracks/2/type = "bezier"
tracks/2/path = NodePath(".:modulate:r")
tracks/2/interp = 1
tracks/2/loop_wrap = true
tracks/2/imported = false
tracks/2/enabled = true
tracks/2/keys = {
"points": PackedFloat32Array( 1, -0.25, 0, 0.25, 0 ),
"times": PackedFloat32Array( 0 )
}
tracks/3/type = "bezier"
tracks/3/path = NodePath(".:modulate:g")
tracks/3/interp = 1
tracks/3/loop_wrap = true
tracks/3/imported = false
tracks/3/enabled = true
tracks/3/keys = {
"points": PackedFloat32Array( 1, -0.25, 0, 0.25, 0 ),
"times": PackedFloat32Array( 0 )
}
tracks/4/type = "bezier"
tracks/4/path = NodePath(".:modulate:b")
tracks/4/interp = 1
tracks/4/loop_wrap = true
tracks/4/imported = false
tracks/4/enabled = true
tracks/4/keys = {
"points": PackedFloat32Array( 1, -0.25, 0, 0.25, 0 ),
"times": PackedFloat32Array( 0 )
}
tracks/5/type = "bezier"
tracks/5/path = NodePath(".:modulate:a")
tracks/5/interp = 1
tracks/5/loop_wrap = true
tracks/5/imported = false
tracks/5/enabled = true
tracks/5/keys = {
"points": PackedFloat32Array( 1, -0.25, 0, 0.25, 0 ),
"times": PackedFloat32Array( 0 )
}

[sub_resource type="Animation" id=3]
resource_name = "delete"
tracks/0/type = "bezier"
tracks/0/path = NodePath(".:modulate:a")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/keys = {
"points": PackedFloat32Array( 1, -0.25, 0, 0.25, 0, 0, -0.25, 0, 0.25, 0 ),
"times": PackedFloat32Array( 0, 1 )
}
tracks/1/type = "bezier"
tracks/1/path = NodePath(".:position:x")
tracks/1/interp = 1
tracks/1/loop_wrap = true
tracks/1/imported = false
tracks/1/enabled = true
tracks/1/keys = {
"points": PackedFloat32Array( 0, -0.25, 0, 0.25, 0, 500, -0.25, 0, 0.25, 0 ),
"times": PackedFloat32Array( 0, 1 )
}
tracks/2/type = "bezier"
tracks/2/path = NodePath(".:position:y")
tracks/2/interp = 1
tracks/2/loop_wrap = true
tracks/2/imported = false
tracks/2/enabled = true
tracks/2/keys = {
"points": PackedFloat32Array(  ),
"times": PackedFloat32Array(  )
}

[sub_resource type="Animation" id=2]
resource_name = "display"
tracks/0/type = "bezier"
tracks/0/path = NodePath(".:modulate:a")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/keys = {
"points": PackedFloat32Array( 0, -0.25, 0, 0.25, 0, 1, -0.25, 0, 0.25, 0 ),
"times": PackedFloat32Array( 0, 1 )
}
tracks/1/type = "bezier"
tracks/1/path = NodePath(".:position:x")
tracks/1/interp = 1
tracks/1/loop_wrap = true
tracks/1/imported = false
tracks/1/enabled = true
tracks/1/keys = {
"points": PackedFloat32Array( 500, -0.25, 0, 0.25, 0, 0, -0.25, 0, 0.25, 0 ),
"times": PackedFloat32Array( 0, 1 )
}
tracks/2/type = "bezier"
tracks/2/path = NodePath(".:position:y")
tracks/2/interp = 1
tracks/2/loop_wrap = true
tracks/2/imported = false
tracks/2/enabled = true
tracks/2/keys = {
"points": PackedFloat32Array(  ),
"times": PackedFloat32Array(  )
}

[node name="Control" type="Control"]
modulate = Color( 1, 1, 1, 0 )
anchor_right = 1.0
anchor_bottom = 1.0
offset_left = 500.0
offset_right = -920.0
offset_bottom = -880.0
custom_minimum_size = Vector2( 500, 200 )
script = ExtResource( 2 )

[node name="backgroundTexture" type="TextureRect" parent="."]
offset_right = 40.0
offset_bottom = 40.0
texture = ExtResource( 1 )

[node name="AnimationPlayer" type="AnimationPlayer" parent="."]
anims/default = SubResource( 1 )
anims/delete = SubResource( 3 )
anims/display = SubResource( 2 )

[connection signal="animation_finished" from="AnimationPlayer" to="." method="_on_AnimationPlayer_animation_finished"]
